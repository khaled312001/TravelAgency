import{createServerClient as t,parseCookieHeader as e}from"@supabase/ssr";import{b as o,s as r,g as s}from"./nitro.mjs";async function fetchWithRetry(t,e){for(let o=1;o<=3;o++)try{return await fetch(t,e)}catch(r){if(e?.signal?.aborted)throw r;if(3===o)throw console.error(`Error fetching request ${t}`,r,e),r;console.warn(`Retrying fetch attempt ${o+1} for request: ${t}`)}throw new Error("Unreachable code")}const serverSupabaseClient=async a=>{if(!a.context._supabaseClient){const{url:n,key:i,cookiePrefix:c,cookieOptions:l,clientOptions:{auth:f={},global:h={}}}=o().public.supabase;a.context._supabaseClient=t(n,i,{auth:f,cookies:{getAll:()=>e(s(a,"Cookie")??""),setAll:t=>t.forEach((({name:t,value:e,options:o})=>r(a,t,e,o)))},cookieOptions:{...l,name:c},global:{fetch:fetchWithRetry,...h}})}return a.context._supabaseClient};export{serverSupabaseClient as s};
//# sourceMappingURL=serverSupabaseClient.mjs.map
