import{d as s,g as e,c as t}from"../../../../_/nitro.mjs";import{createClient as o}from"@supabase/supabase-js";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"node:url";import"ipx";import"node:fs";import"node:path";const i=s((async s=>{try{const i=e(s,"authorization");if(!i||!i.startsWith("Bearer "))throw t({statusCode:401,statusMessage:"No valid session token provided"});const n=i.substring(7),r=o("https://ueofktshvaqtxjsxvisv.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlb2ZrdHNodmFxdHhqc3h2aXN2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTkyMzE3NiwiZXhwIjoyMDc1NDk5MTc2fQ.8x1bRWz6UgyRgkMQf5c32qABhgRNnY-p8Q2Sz9S-jn0"),{data:a,error:d}=await r.from("admin_sessions").select("\n        admin_user_id,\n        expires_at,\n        admin_users (\n          id,\n          email,\n          name,\n          role,\n          is_active,\n          last_login,\n          created_at,\n          updated_at\n        )\n      ").eq("session_token",n).single();if(d||!a)throw t({statusCode:401,statusMessage:"Invalid session"});if(new Date>new Date(a.expires_at))throw await r.from("admin_sessions").delete().eq("session_token",n),t({statusCode:401,statusMessage:"Session expired"});return a.admin_users}catch(s){if(console.error("Auth check error:",s),s.statusCode)throw s;throw t({statusCode:500,statusMessage:"Internal server error"})}}));export{i as default};
//# sourceMappingURL=me.get.mjs.map
