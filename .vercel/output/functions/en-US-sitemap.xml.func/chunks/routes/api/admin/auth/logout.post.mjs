import{d as s,g as t,c as o}from"../../../../_/nitro.mjs";import{createClient as e}from"@supabase/supabase-js";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"node:url";import"ipx";import"node:fs";import"node:path";const i=s((async s=>{try{const i=t(s,"authorization");if(!i||!i.startsWith("Bearer "))throw o({statusCode:401,statusMessage:"No valid session token provided"});const r=i.substring(7),a=e("https://ueofktshvaqtxjsxvisv.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlb2ZrdHNodmFxdHhqc3h2aXN2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTkyMzE3NiwiZXhwIjoyMDc1NDk5MTc2fQ.8x1bRWz6UgyRgkMQf5c32qABhgRNnY-p8Q2Sz9S-jn0"),{data:n,error:d}=await a.from("admin_sessions").select("admin_user_id").eq("session_token",r).single();if(d||!n)throw o({statusCode:401,statusMessage:"Invalid session"});return await a.from("admin_sessions").delete().eq("session_token",r),await a.from("admin_activity_logs").insert({admin_user_id:n.admin_user_id,action:"logout",ip_address:getClientIP(s),user_agent:t(s,"user-agent")}),{success:!0,message:"Logged out successfully"}}catch(s){if(console.error("Logout error:",s),s.statusCode)throw s;throw o({statusCode:500,statusMessage:"Internal server error"})}}));export{i as default};
//# sourceMappingURL=logout.post.mjs.map
